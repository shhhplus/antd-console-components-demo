{"version":3,"sources":["menus.js","pages/Staff.js","pages/Teacher.js","pages/Student.js","App.js","pages/Dashboard.js","serviceWorker.js","index.js"],"names":["icon","UserOutlined","name","path","AppstoreOutlined","children","BarChartOutlined","CloudOutlined","ShopOutlined","TeamOutlined","UploadOutlined","VideoCameraOutlined","Column","SearchTable","search","values","pagination","filters","sorter","extra","Promise","resolve","reject","setTimeout","records","map","idx","number","current","id","cellphone","toString","address","total","Create","exit","Form","useForm","form","Label","style","width","title","Item","label","rules","paddingLeft","type","onClick","Account","headers","_admin","avatar","password","user","json","window","localStorage","getItem","JSON","parse","setItem","stringify","getUser","LoginPage","onSuccess","submit","useCallback","username","onSubmit","logout","routes","component","header","marginBottom","span","labelWidth","value","onFresh","padding","exact","instanceRef","useRef","useEffect","to","PlusOutlined","useMemo","left","keyword","rowKey","record","onRef","instance","dataIndex","text","Login","menus","onLogoutSubmit","key","SettingOutlined","Divider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cab3f49.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AppstoreOutlined,\n  BarChartOutlined,\n  CloudOutlined,\n  ShopOutlined,\n  TeamOutlined,\n  UserOutlined,\n  UploadOutlined,\n  VideoCameraOutlined,\n} from '@ant-design/icons';\n\nexport default [\n  {\n    icon: <UserOutlined />,\n    name: '主面板',\n    path: '/',\n  },\n  {\n    icon: <AppstoreOutlined />,\n    name: '人员管理',\n    path: '/person',\n    children: [\n      {\n        icon: <AppstoreOutlined />,\n        name: '员工管理',\n        path: '/staff',\n      },\n      {\n        icon: <BarChartOutlined />,\n        name: '老师管理',\n        path: '/teacher',\n      },\n      {\n        icon: <CloudOutlined />,\n        name: '用户管理',\n        path: '/student',\n      },\n    ],\n  },\n  {\n    icon: <ShopOutlined />,\n    name: '科目管理',\n    path: '/subject',\n  },\n  {\n    icon: <TeamOutlined />,\n    name: '课程管理',\n    path: '/course',\n  },\n  {\n    icon: <UploadOutlined />,\n    name: '报名管理',\n    path: '/join',\n  },\n  {\n    icon: <VideoCameraOutlined />,\n    name: '财务统计',\n    path: '/finance',\n  },\n  {\n    icon: <ShopOutlined />,\n    name: '系统设置',\n    path: '/setting',\n  },\n];\n","import React, { useEffect, useRef, useMemo } from 'react';\nimport { PageHeader, Button, Form, Input, Card } from 'antd';\nimport { Link as RelativeLink } from '@shhhplus/react-router-relative-link';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  DrawerPageLayout,\n  PageLayout,\n  DrawerPageEntry,\n  KeywordSearch,\n  SearchTable,\n} from 'antd-console-components';\n\nconst Column = SearchTable.Column;\n\nconst search = ({ values, pagination, filters, sorter, extra }) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve({\n        records: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((idx) => {\n          const number = 100 * (pagination.current - 1) + idx;\n          return {\n            id: number,\n            name: `员工-${number}`,\n            cellphone: (13800138000 + idx).toString(),\n            address: `闸北区大宁灵石公园${number}号`,\n          };\n        }),\n        current: pagination.current,\n        total: 55,\n      });\n    }, 500);\n  });\n};\n\nconst Create = ({ exit }) => {\n  const [form] = Form.useForm();\n  const Label = ({ children }) => {\n    return <div style={{ width: '80px' }}>{children}</div>;\n  };\n  return (\n    <DrawerPageLayout title=\"新增员工\">\n      <Form form={form}>\n        <Form.Item label={<Label>姓名</Label>} name=\"username\" rules={[]}>\n          <Input />\n        </Form.Item>\n        <Form.Item label={<Label>地址</Label>} name=\"address\" rules={[]}>\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <div style={{ paddingLeft: '94px' }}>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                exit();\n              }}\n            >\n              提交\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </DrawerPageLayout>\n  );\n};\n\nexport default () => {\n  // SearchTable的实例\n  const instanceRef = useRef(null);\n\n  useEffect(() => {\n    // 触发搜索\n    instanceRef.current.search();\n  }, [instanceRef]);\n\n  const extra = (\n    <RelativeLink to=\"create\">\n      <Button type=\"primary\" icon={<PlusOutlined />}>\n        新建\n      </Button>\n    </RelativeLink>\n  );\n\n  const routes = useMemo(() => {\n    return [\n      {\n        path: 'create',\n        component: Create,\n      },\n    ];\n  }, []);\n\n  return (\n    <DrawerPageEntry routes={routes}>\n      <PageLayout header={<PageHeader title=\"员工管理\" />}>\n        <Card>\n          <SearchTable\n            header={\n              <KeywordSearch\n                left={extra}\n                onSubmit={(keyword) => {\n                  instanceRef.current.search({\n                    values: { keyword },\n                  });\n                }}\n              />\n            }\n            rowKey={(record) => record.id.toString()}\n            search={search}\n            onRef={(instance) => {\n              instanceRef.current = instance;\n            }}\n          >\n            <Column\n              title=\"姓名\"\n              dataIndex=\"name\"\n              sorter={true}\n              filters={[\n                { text: 'Joe', value: 'Joe' },\n                { text: 'Jim', value: 'Jim' },\n              ]}\n            />\n            <Column title=\"手机号\" dataIndex=\"cellphone\" />\n            <Column title=\"地址\" dataIndex=\"address\" />\n          </SearchTable>\n        </Card>\n      </PageLayout>\n    </DrawerPageEntry>\n  );\n};\n","import React, { useEffect, useRef, useMemo } from 'react';\nimport { PageHeader, Button, Form, Input, Card } from 'antd';\nimport { Link as RelativeLink } from '@shhhplus/react-router-relative-link';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  DrawerPageLayout,\n  PageLayout,\n  DrawerPageEntry,\n  KeywordSearch,\n  SearchTable,\n} from 'antd-console-components';\n\nconst Column = SearchTable.Column;\n\nconst search = ({ values, pagination, filters, sorter, extra }) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve({\n        records: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((idx) => {\n          const number = 100 * (pagination.current - 1) + idx;\n          return {\n            id: number,\n            name: `老师-${number}`,\n            cellphone: (13800138000 + idx).toString(),\n            address: `闸北区大宁灵石公园${number}号`,\n          };\n        }),\n        current: pagination.current,\n        total: 55,\n      });\n    }, 500);\n  });\n};\n\nconst Create = ({ exit }) => {\n  const [form] = Form.useForm();\n  const Label = ({ children }) => {\n    return <div style={{ width: '80px' }}>{children}</div>;\n  };\n  return (\n    <DrawerPageLayout title=\"新增老师\">\n      <Form form={form}>\n        <Form.Item label={<Label>姓名</Label>} name=\"username\" rules={[]}>\n          <Input />\n        </Form.Item>\n        <Form.Item label={<Label>地址</Label>} name=\"address\" rules={[]}>\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <div style={{ paddingLeft: '94px' }}>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                exit();\n              }}\n            >\n              提交\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </DrawerPageLayout>\n  );\n};\n\nexport default () => {\n  // SearchTable的实例\n  const instanceRef = useRef(null);\n\n  useEffect(() => {\n    // 触发搜索\n    instanceRef.current.search();\n  }, [instanceRef]);\n\n  const extra = (\n    <RelativeLink to=\"create\">\n      <Button type=\"primary\" icon={<PlusOutlined />}>\n        新建\n      </Button>\n    </RelativeLink>\n  );\n\n  const routes = useMemo(() => {\n    return [\n      {\n        path: 'create',\n        component: Create,\n      },\n    ];\n  }, []);\n\n  return (\n    <DrawerPageEntry routes={routes}>\n      <PageLayout header={<PageHeader title=\"老师管理\" />}>\n        <Card>\n          <SearchTable\n            header={\n              <KeywordSearch\n                left={extra}\n                onSubmit={(keyword) => {\n                  instanceRef.current.search({\n                    values: { keyword },\n                  });\n                }}\n              />\n            }\n            rowKey={(record) => record.id.toString()}\n            search={search}\n            onRef={(instance) => {\n              instanceRef.current = instance;\n            }}\n          >\n            <Column\n              title=\"姓名\"\n              dataIndex=\"name\"\n              sorter={true}\n              filters={[\n                { text: 'Joe', value: 'Joe' },\n                { text: 'Jim', value: 'Jim' },\n              ]}\n            />\n            <Column title=\"手机号\" dataIndex=\"cellphone\" />\n            <Column title=\"地址\" dataIndex=\"address\" />\n          </SearchTable>\n        </Card>\n      </PageLayout>\n    </DrawerPageEntry>\n  );\n};\n","import React, { useEffect, useRef, useMemo } from 'react';\nimport { PageHeader, Button, Form, Input, Card } from 'antd';\nimport { Link as RelativeLink } from '@shhhplus/react-router-relative-link';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  DrawerPageLayout,\n  PageLayout,\n  DrawerPageEntry,\n  KeywordSearch,\n  SearchTable,\n} from 'antd-console-components';\n\nconst Column = SearchTable.Column;\n\nconst search = ({ values, pagination, filters, sorter, extra }) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve({\n        records: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((idx) => {\n          const number = 100 * (pagination.current - 1) + idx;\n          return {\n            id: number,\n            name: `学生-${number}`,\n            cellphone: (13800138000 + idx).toString(),\n            address: `闸北区大宁灵石公园${number}号`,\n          };\n        }),\n        current: pagination.current,\n        total: 55,\n      });\n    }, 500);\n  });\n};\n\nconst Create = ({ exit }) => {\n  const [form] = Form.useForm();\n  const Label = ({ children }) => {\n    return <div style={{ width: '80px' }}>{children}</div>;\n  };\n  return (\n    <DrawerPageLayout title=\"新增学生\">\n      <Form form={form}>\n        <Form.Item label={<Label>姓名</Label>} name=\"username\" rules={[]}>\n          <Input />\n        </Form.Item>\n        <Form.Item label={<Label>地址</Label>} name=\"address\" rules={[]}>\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <div style={{ paddingLeft: '94px' }}>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                exit();\n              }}\n            >\n              提交\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </DrawerPageLayout>\n  );\n};\n\nexport default () => {\n  // SearchTable的实例\n  const instanceRef = useRef(null);\n\n  useEffect(() => {\n    // 触发搜索\n    instanceRef.current.search();\n  }, [instanceRef]);\n\n  const extra = (\n    <RelativeLink to=\"create\">\n      <Button type=\"primary\" icon={<PlusOutlined />}>\n        新建\n      </Button>\n    </RelativeLink>\n  );\n\n  const routes = useMemo(() => {\n    return [\n      {\n        path: 'create',\n        component: Create,\n      },\n    ];\n  }, []);\n\n  return (\n    <DrawerPageEntry routes={routes}>\n      <PageLayout header={<PageHeader title=\"学生管理\" />}>\n        <Card>\n          <SearchTable\n            header={\n              <KeywordSearch\n                left={extra}\n                onSubmit={(keyword) => {\n                  instanceRef.current.search({\n                    values: { keyword },\n                  });\n                }}\n              />\n            }\n            rowKey={(record) => record.id.toString()}\n            search={search}\n            onRef={(instance) => {\n              instanceRef.current = instance;\n            }}\n          >\n            <Column\n              title=\"姓名\"\n              dataIndex=\"name\"\n              sorter={true}\n              filters={[\n                { text: 'Joe', value: 'Joe' },\n                { text: 'Jim', value: 'Jim' },\n              ]}\n            />\n            <Column title=\"手机号\" dataIndex=\"cellphone\" />\n            <Column title=\"地址\" dataIndex=\"address\" />\n          </SearchTable>\n        </Card>\n      </PageLayout>\n    </DrawerPageEntry>\n  );\n};\n","import React, { useCallback, Fragment } from 'react';\nimport {\n  LogoutOutlined,\n  SettingOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Menu } from 'antd';\nimport { App, Login, headers } from 'antd-console-components';\nimport menus from './menus';\nimport Dashboard from './pages/Dashboard';\nimport Staff from './pages/Staff';\nimport Teacher from './pages/Teacher';\nimport Student from './pages/Student';\n\nimport './App.css';\n\nconst { Account } = headers;\n\nconst _admin = {\n  id: 1,\n  name: 'admin',\n  avatar:\n    'https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png',\n  password: '123456',\n};\n\nconst user = {\n  get: () => {\n    const json = window.localStorage.getItem('user');\n    if (json) {\n      return JSON.parse(json);\n    } else {\n      return null;\n    }\n  },\n  set: (user) => {\n    window.localStorage.setItem('user', user ? JSON.stringify(user) : '');\n  },\n};\n\nconst getUser = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(user.get());\n    }, 500);\n  });\n};\n\nconst LoginPage = ({ onSuccess }) => {\n  const submit = useCallback(({ username, password }) => {\n    return new Promise((resolve, reject) => {\n      if (username !== _admin.name || password !== _admin.password) {\n        setTimeout(() => {\n          reject('对不起，用户名密码错误，请重新输入。');\n        }, 500);\n      } else {\n        setTimeout(() => {\n          user.set(_admin);\n          resolve();\n        }, 500);\n      }\n    });\n  }, []);\n  return <Login onSubmit={submit} onSuccess={onSuccess} />;\n};\n\nconst logout = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const success = true;\n      if (success) {\n        user.set(null);\n        resolve(true);\n      } else {\n        reject('对不起，退出失败。请重试。');\n      }\n    }, 500);\n  });\n};\n\nconst routes = [\n  {\n    path: '/',\n    component: Dashboard,\n    exact: true,\n  },\n  {\n    path: '/person/staff',\n    component: Staff,\n  },\n  {\n    path: '/person/teacher',\n    component: Teacher,\n  },\n  {\n    path: '/person/student',\n    component: Student,\n  },\n];\n\nexport default () => {\n  return (\n    <App\n      Login={LoginPage}\n      getUser={getUser}\n      logout={logout}\n      routes={routes}\n      menus={menus}\n      headers={\n        <Fragment>\n          <Account onLogoutSubmit={logout}>\n            <Menu.Item key=\"uc\">\n              <UserOutlined />\n              个人中心\n            </Menu.Item>\n            <Menu.Item key=\"settings\">\n              <SettingOutlined />\n              个人设置\n            </Menu.Item>\n            <Menu.Divider />\n          </Account>\n        </Fragment>\n      }\n    />\n  );\n};\n","import React from 'react';\nimport { Row, Col, PageHeader } from 'antd';\nimport {\n  PageLayout,\n  FieldInfo,\n  Section,\n  Spreader,\n} from 'antd-console-components';\n\nconst labelWidth = 60;\nconst marginBottom = 10;\n\nexport default () => {\n  return (\n    <PageLayout header={<PageHeader title=\"主面板\" />}>\n      <div style={{ marginBottom: '20px' }}>\n        <Spreader title=\"基本信息\">\n          <Row style={{ marginBottom }}>\n            <Col span={6}>\n              <FieldInfo\n                labelWidth={labelWidth}\n                marginBottom={0}\n                label=\"姓名\"\n                value=\"汤姆克鲁斯\"\n              />\n            </Col>\n            <Col span={6}>\n              <FieldInfo\n                labelWidth={labelWidth}\n                marginBottom={0}\n                label=\"国籍\"\n                value=\"美国\"\n              />\n            </Col>\n            <Col span={6}>\n              <FieldInfo\n                labelWidth={labelWidth}\n                marginBottom={0}\n                label=\"性别\"\n                value=\"男\"\n              />\n            </Col>\n            <Col span={6}>\n              <FieldInfo\n                labelWidth={labelWidth}\n                marginBottom={0}\n                label=\"代表作品\"\n                value=\"碟中谍系列、壮志凌云\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={6}>\n              <FieldInfo\n                labelWidth={labelWidth}\n                marginBottom={0}\n                label=\"城市\"\n                value=\"上海\"\n              />\n            </Col>\n            <Col span={6}>\n              <FieldInfo\n                labelWidth={labelWidth}\n                marginBottom={0}\n                label=\"所属国家\"\n                value=\"中国\"\n              />\n            </Col>\n            <Col span={6}>\n              <FieldInfo\n                labelWidth={labelWidth}\n                marginBottom={0}\n                label=\"位置\"\n                value=\"华东\"\n              />\n            </Col>\n          </Row>\n        </Spreader>\n      </div>\n\n      <Section title=\"我的待办\" onFresh={() => {}}>\n        <div style={{ padding: '0 0 60px 0' }}>todo 1</div>\n        <div style={{ padding: '0 0 60px 0' }}>todo 2</div>\n        <div style={{ padding: '0 0 60px 0' }}>todo 3</div>\n      </Section>\n\n      <Section title=\"通知\" onFresh={() => {}}>\n        <div style={{ padding: '0 0 60px 0' }}>notification 1</div>\n        <div style={{ padding: '0 0 60px 0' }}>notification 2</div>\n        <div style={{ padding: '0 0 60px 0' }}>notification 3</div>\n      </Section>\n    </PageLayout>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}